blueprint:
  name: Inovelli Blue LED Effect Controller (zigbee2mqtt)
  description: Sets an effect on an Inovelli Blue switch LED bars based on values in MQTT payload when triggered by a supported event. Individual LED control (LEDs 1-7) is not currently supported; only full LED bar effects can be applied. Requires script generated by the blueprint found here- https://github.com/zanix/home-assistant-blueprints/blob/master/script/inovelli_blue_led_zigbee2mqtt.yaml
  domain: automation
  input:
    switch_led_target:
      name: Inovelli Blue Switch LED
      description: Inovelli Blue switch device with customizable LED to which an effect will be applied. Currently only works with a single switch.
      selector:
        target:
          device:
            integration: mqtt
            manufacturer: Inovelli
          entity:
            integration: mqtt
            domain: light
    mqtt_topic:
      name: MQTT Topic
      description: >
        Monitored MQTT topic to which LED effect payloads are published. Payloads support several attributes:
          * `effect` | string | Required. The effect applied to the LED bar.
          * `color` | string | Optional. The color of the LED bar while the effect is applied.
          * `intensity` | int | Optional. The brightness percentage of the LED bar while the effect is applied.
          * `duration` | int | Optional. The length of time in seconds the effect is applied to the LED bar.
      selector:
        text:
    default_led_effect:
      name: Default LED Effect
      description: Default `effect` to apply to LED bar when one has not been provided in the MQTT payload. Default is `Solid`.
      default: Solid
      selector:
        select:
          options:
            - "Off"
            - "Clear"
            - "Solid"
            - "Aurora"
            - "Chase"
            - "Fast Blink"
            - "Fast Chase"
            - "Fast Falling"
            - "Fast Rising"
            - "Fast Siren"
            - "Medium Blink"
            - "Medium Falling"
            - "Medium Rising"
            - "Open/Close"
            - "Pulse"
            - "Slow Blink"
            - "Slow Chase"
            - "Slow Falling"
            - "Slow Rising"
            - "Slow Siren"
            - "Small to Big"
    default_effect_color:
      name: Default Effect Color
      description: Default `color` to apply to LED bar effect when one has not been provided in the MQTT payload. Default is `Blue`.
      default: Blue
      selector:
        select:
          custom_value: true
          options:
            - "Off"
            - Red
            - Orange
            - Yellow
            - Green
            - Cyan
            - Teal
            - Blue
            - Purple
            - Light Pink
            - Pink
            - White
    default_effect_level:
      name: Default Effect Level
      description: Default `level` (percentage) of the LED bar effect when one has not been provided in the MQTT payload. Default is `10`.
      default: 10
      selector:
        number:
          min: 0
          max: 100
          mode: box
          step: 1
          unit_of_measurement: percent
    default_effect_duration:
      name: Default Effect Duration
      description: Default `duration` of the LED bar effect when one has not been provided inthe MQTT payload. Values 1-60 is in seconds. Values 61-120 is in minutes, calculated by (value-60); example a value of 65 would be 65-60 = 5 minutes. Values 120-254 is in hours, calculated by (value-120); example a value of 132 would be 132-120 would be 12 hours. - 255 Indefinitely. Default is `255`.
      default: 255
      selector:
        number:
          min: 0
          max: 255
          mode: box
          step: 1
mode: restart
trigger:
- platform: mqtt
  topic: !input mqtt_topic
  id: trigger_mqtt
variables:
  switch_led_target: !input 'switch_led_target'
  mqtt_topic: !input 'mqtt_topic'
  default_led_effect: !input 'default_led_effect'
  default_effect_color: !input 'default_effect_color'
  default_effect_level: !input 'default_effect_level'
  default_effect_duration: !input 'default_effect_duration'
  led_effect: >
    {%- set effect = '' -%}
    {%- if trigger is defined -%}
      {%- if trigger.payload_json is defined -%}
        {%- if trigger.payload_json.effect is defined -%}
          {%- set effect = trigger.payload_json.effect -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}
    {%- if effect != '' -%}
      {{ effect }}
    {%- else -%}
      {{ default_led_effect }}
    {%- endif -%}
  effect_color: >
    {%- set color = '' -%}
    {%- if trigger is defined -%}
      {%- if trigger.payload_json is defined -%}
        {%- if trigger.payload_json.color is defined -%}
          {%- set color = trigger.payload_json.color -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}
    {%- if color != '' -%}
      {{ color }}
    {%- else -%}
      {{ default_effect_color }}
    {%- endif -%}
  effect_level: >
    {%- set level = '' -%}
    {%- if trigger is defined -%}
      {%- if trigger.payload_json is defined -%}
        {%- if trigger.payload_json.level is defined -%}
          {%- set color = trigger.payload_json.level -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}
    {%- if level != '' -%}
      {{ level }}
    {%- else -%}
      {{ default_effect_level }}
    {%- endif -%}
  effect_duration: >
    {%- set duration = '' -%}
    {%- if trigger is defined -%}
      {%- if trigger.payload_json is defined -%}
        {%- if trigger.payload_json.duration is defined -%}
          {%- set duration = trigger.payload_json.duration -%}
        {%- endif -%}
      {%- endif -%}
    {%- endif -%}
    {%- if duration != '' -%}
      {{ duration }}
    {%- else -%}
      {{ default_effect_duration }}
    {%- endif -%}
condition: []
action:
  - service: script.inovelli_blue_led_zigbee2mqtt
    data:
      entity_id:
        - '{{ switch_led_target.entity_id }}'
      led: "0"
      effect: '{{ led_effect }}'
      color: '{{ effect_color }}'
      level: '{{ effect_level }}'
      duration: '{{ effect_duration }}'