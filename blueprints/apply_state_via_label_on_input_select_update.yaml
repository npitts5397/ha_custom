blueprint:
  name: Apply State via Label on Input Select Update
  domain: automation
  author: Nathaniel Pitts
  source_url: https://github.com/npitts5397/ha_custom/blob/main/blueprints/apply_native_light_effects_on_scene_activation.yaml
  homeassistant:
    min_version: 2024.8.0
  description: |
    Creates automations triggered by updating of an input_select entity. The automation then
    applies desired state based on applied labels to entities appropriate to the option 
    selected in the input_select.

    Version history:
      * 1.0.0 - HA-141 - Initial version.
  input:
    trigger_entities:
      name: Trigger Entities
      icon: mdi:form-select
      description: Entities with string data for triggering this automation.
      collapsed: false
      input:
        input_select_entity:
          name: Input Select Entity
          description: (Required) The input select entity whose options related to desired state.
          selector:
            entity:
              domain: input_select
    option_to_label_config:
      name: Options to Labels
      icon: mdi:label-multiple
      description: Inputs related to option to label mappings.
      collapsed: false
      input:
        option_label_map:
          name: Option to Label Map
          description: >
            (Required) Define a mapping of input_select options to two labels.
            Example:
            {"Option A": {"on": "label_1", "label_2"], "Option B": ["label_3", "label_4"]}
          selector:
            text:
              multiline: true
variables:
  input_select_entity: !input input_select_entity
  option_label_map: !input option_label_map
  selected_option: "{{ states(input_select_entity) }}"
  label_map: "{{ option_label_map }}"
  labels: "{{ label_map[selected_option] }}"
mode: restart
trigger:
  - alias: Input select updated
    id: input_select_updated
    platform: state
    entity_id: !input input_select_entity
action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ selected_option in label_map }}"
        sequence:
          - action: notify.persistent_notification
            data:
              message: "{{ label_map[selected_option] }}"
    default:
      - action: notify.persistent_notification
        data:
          message: "No labels defined for {{ selected_option }}"

