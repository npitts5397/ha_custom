Lighting Blueprint to-dos:
  - Support non-adaptive lighting configurations (Update every block with condition)
  - Detect Inovelli switches for applying inovelli_blue_led_script, don't assume all switches are Inovelli
  - AL switch updates are broken (enable color, sleep, etc.)




# Turn on primary lights and wait for them to all be on
sequence:
  - action: light.turn_on
    target:
      entity_id:
        "{{ primary_lights }}"
  - delay:
      milliseconds: 300
  - wait_template: >
      {% set lights_on = primary_lights | map('states') | select('equalto', 'on') | list %}
      {{ lights_on | length == primary_lights | length }}
    timeout: '00:00:10'

# For each switch defined in Adaptive Lighting switches, set switch options
sequence2:
  - repeat:
      for_each: "{{ primary_lights_adaptive_lighting_switches }}"
      sequence:
        - action: adaptive_lighting.change_switch_settings
          data:
            use_defaults: configuration
            entity_id: "{{ repeat.item }}"
            prefer_rgb_color: "{{ enable_rgb_color }}"

# Set Adaptive Lighting to manual and turn off AL switches
sequence3:
  - action: adaptive_lighting.set_manual_control
    data:
      manual_control: true
      lights:
        "{{ primary_lights }}"
  - action: switch.turn_off
    target:
      entity_id:
        "{{ primary_lights_adaptive_lighting_switches }}"

# Turn on parimary lights if HA control is enabled
sequence4:
  - if:
      - condition: template
        value_template: "{{ primary_lights_direct_control_enabled == true }}"
    then:
      - action: light.turn_on
        target:
          entity_id:
            "{{ primary_lights }}"

# set secondary adaptive lighting switch config and apply
sequence5:
  - action: adaptive_lighting.apply
    data:
      lights:
        "{{ secondary_lights }}"
      adapt_brightness: true
      turn_on_lights: true
      adapt_color: true
      prefer_rgb_color: false
      transition: '1'
